#!/bin/bash
# pepper, jotabe, (c) Grupo SIESTA, 22-08-2007
#
# Visualizacion de estado y log's del sistema

# Obtener parametros
id_accion=`echo "$QUERY_STRING" | sed 's/^id_log=//g' | cut -d"&" -f1`
id_part=`echo "$QUERY_STRING" | sed 's/^id_log=//g' | cut -d"&" -f2`

# Configurar entorno
source ../www-setup.shi
source fweb.shi
validate_login
get_maquina
get_modo_video
get_modo_grabacion
if [ "$ModoVideo" = "Apagado" ] ; then
	accion_power="Encender"
	img_power="on.gif"
else
	accion_power="Apagar"
	img_power="off.gif"
fi

# Enviar documento html
html_doc_start "M750T - Estado del box" "300" "an-e-bm"

# Respuesta html
html_top "Estado del box" "" "" ""

# 2ª barra de botones y desplegable de acciones
echo "				<br>
				<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
					<tr>
						<td width=\"30%\" align=\"left\">
							<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
								<tr height="64">
									<script type=\"text/javascript\">
										poner_boton(\"Caché<br>Sincroguía\",      \"/img/cache_sincro.gif\", \"Actualizar caché de todos los canales\", \"javascript:actCacheCanales();\"      );
										poner_boton(\"Imagenes<br>Sincroguía\",   \"/img/getsincroimg.gif\", \"Descargar imagenes de Sincroguía\",      \"javascript:downloadSincroImg();\"    );
										poner_boton(\"Reload<br>root.crontab\",   \"/img/crontab.gif\",      \"Recargar root.crontab\",                 \"javascript:reloadCrontab();\"        );
										poner_boton(\"Reiniciar<br>Gigaset\",     \"/img/reboot.gif\",       \"Reiniciar Gigaset\",                     \"javascript:reboot();\"               );
										poner_boton(\"Programar<br>Apagado\",     \"/img/sleep.gif\",        \"Programar Apagado (sleep)\",             \"/cgi-bin/box/sleep\"                 );
										poner_boton(\"$accion_power<br>Gigaset\", \"/img/$img_power\",       \"$accion_power Gigaset\",                 \"javascript:enviarTecla('POWER'); reloadDelayed();\" ,\"si\");
									</script>
								</tr>
							</table>
						</td>
						<td width=\"50%\" align=\"center\" class=\"txtNormal\">
							Ver estado: <select name=\"id_log\" id=\"id_log\">
								<option value=\"log_cache_sincro\">Generación de caché de Sincroguía</option>
								<option value=\"log_getsincroimg\">Descargas de imágenes de Sincroguía</option>
								<option value=\"log_pgmactual\">Log generación de Programa Actual</option>
								<option value=\"log_crond\">Log Crond</option>
								<option value=\"log_keycontrol\">Log Key-control</option>
								<option value=\"log_synctime\">Log de sincronización de hora</option>
								<option value=\"log_run_httpd\">Ejecuciones de run-httpd.sh</option>
								<option value=\"log_thttpd\">Log thttpd</option>
								<option value=\"log_swap\">Log swap</option>
								<option value=\"log_record\">Grabaciones programadas/canceladas desde la aplicación</option>
								<option value=\"log_login\">Login en la aplicación</option>
								<option value=\"log_search\">Búsquedas realizadas</option>
								<option value=\"log_archivo\">Archivo de grabaciones</option>
								<option value=\"log_agrupar\">Agrupado de grabaciones</option>
								<option value=\"log_cpmv_record\">Copiar/Mover Grabación</option>
								<option value=\"log_download\">Descargas de grabaciones realizadas a local</option>
								<option value=\"log_edit_crid\">Edición de grabaciones</option>
								<option value=\"log_view_video\">Visualizaciones de grabaciones en PC local</option>
								<option value=\"log_delete\">Borrado de grabaciones</option>
								<option value=\"log_fmpg_huerfanos\">Borrado de ficheros de grabación huerfanos</option>
								<option value=\"log_checkdisk\">Chequeo de particiones del disco</option>
								<option value=\"log_cmd\">Comandos ejecutados</option>
								<option value=\"log_RECORDER_LOG\">Log del grabador</option>
								<option value=\"log_WDG\">Reinicios wavebox (watchdog)</option>
								<option value=\"log_df\">Espacio en disco (df)</option>
								<option value=\"log_estado_swap\">Estado swap (/proc/swaps)</option>
								<option value=\"log_free\">Uso de memoria (free)</option>
								<option value=\"log_crontab\">Procesos Planificados (crontab -l)</option>
								<option value=\"log_ifconfig\">Configuración de Red (ifconfig)</option>
								<option value=\"log_MAC\">Información MAC</option>
								<option value=\"log_ps\">Procesos en ejecución (ps)</option>
								<option value=\"log_partitions\">Particiones de disco (cat /proc/partitions)</option>
								<option value=\"log_mount\">Puntos de montaje (cat /proc/mounts)</option>
								<option value=\"log_act_sincro\">Actualización de la Sincroguía</option>
							</select>"
[ ${#id_accion} -ne 0 ] && echo "							<script type=\"text/javascript\">document.getElementById('id_log').value=\"$id_accion\";</script>"
echo "							&nbsp;&nbsp;
							<input class=\"txtNormal\" type=\"submit\" value=\"Ver\">
						</td>
					</tr>
				</table>
				<br>
				<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\" class=\"borderTabla_sup\">"

# Procesar peticion
	case $id_accion in
		log_cache_sincro )
			print_log_file "Generación de caché de Sincroguía"                         "${Cache}/cache.sincro.log"
			if [ -s ${Cache}/cache.sincro.err ]; then
				print_log_file "Errores en generación de caché de Sincroguía"          "${Cache}/cache.sincro.err"
			fi
			;;
		log_getsincroimg )
			print_log_file "Descargas de imágenes de Sincroguía"                       "/var/log/getsincroimg.log"
			# Boton descarga images.txt
			[ -s /tmp/images.txt ] && echo "					<tr>
						<td class=\"filaNormal\" align=\"center\">
							<br>
							<input type=\"button\" value=\"Descargar images.txt\" class=\"txtInfo\" onclick=\"descargarImages()\">
							<br>&nbsp;<br>
						</td>
					</tr>"
			# Mostrar errores
			if [ -s /var/log/getsincroimg.err ]; then
				print_log_file "Errores en descarga de imágenes de Sincroguía"         "/var/log/getsincroimg.err"
			fi
			;;
		log_pgmactual )
			print_log_file "Log generación de Programa Actual"                         "${Cache}/cache.pgmactual.log"
			if [ -s ${Cache}/cache.pgmactual.err ]; then
				print_log_file "Errores en generación de Programa Actual"              "${Cache}/cache.pgmactual.err"
			fi
			;;
		log_crond )
			print_log_file "Log Crond"                                                 "/var/log/crond.log";;
		log_keycontrol )
			print_log_file "Log Key-Control"                                           "/var/log/key-control.log";;
		log_synctime )
			print_log_file "Log de sincronización de hora"                             "/var/log/time.log";;
		log_run_httpd )
			print_log_file "Ejecuciones de run-httpd.sh"                               "/var/log/run-http.log";;
		log_thttpd )
			print_log_file "Log thttpd"                                                "/var/log/thttpd.log";;
		log_swap )
			print_log_file "Log swap"                                                  "/var/log/swap.log";;
		log_record )
			print_log_file "Grabaciones programadas/canceladas desde la aplicación"    "/var/log/record.log";;
		log_login )
			print_log_file "Login en la aplicación"                                    "/var/log/login.log";;
		log_search )
			print_log_file "Búsquedas realizadas"                                      "/var/log/search.log";;
		log_archivo )
			print_log_file "Archivo de grabaciones"                                    "/var/log/archivo-crid.log";;
		log_agrupar )
			print_log_file "Agrupado de grabaciones"                                   "/var/log/agrupar-crid.log";;
		log_cpmv_record )
			print_log_file "Peticiones Copiar/Mover Grabación"                         "/var/log/cpmv-crid.log"
			if [ -s /var/log/cpmv-crid-proc.log ]; then
				print_log_file "Procesos Copiar/Mover Grabación"                       "/var/log/cpmv-crid-proc.log"
			fi
			isRunning=`ps axw | grep "cpmv-crid.sh" | grep -v grep | wc -l`
			if [ $isRunning -gt 0 ]; then
				echo "<tr>
						<td class=\"filaNormal\" align=\"center\">
							<br>
							<input type=\"button\" value=\"Actualizar Estado\" class=\"txtInfo\" onclick=\"document.location.reload()\">&nbsp;
							<input type=\"button\" value=\"Detener Copia/Traspaso\" class=\"txtInfo\" onclick=\"stopCpmv()\">
							<br>&nbsp;<br>
						</td>
					</tr>"
			fi
			;;
		log_download )
			print_log_file "Descargas de grabaciones realizadas a local"               "/var/log/download.log";;
		log_edit_crid )
			print_log_file "Edición de grabaciones"                                    "/var/log/edit-crid.log";;
		log_view_video )
			print_log_file "Visualizaciones de grabaciones en PC local"                "/var/log/ver-crid.log";;
		log_delete )
			print_log_file "Borrado de grabaciones"                                    "/var/log/delete-crid.log";;
		log_fmpg_huerfanos )
			print_log_file "Borrado de ficheros de grabación huerfanos"                "/var/log/fmpg-huerfanos.log";;
		log_checkdisk )
			print_log_file "Chequeo de particiones del disco"                          "/var/log/checkdisk.log"
			if [ -s /var/log/checkdisk.err ]; then
				print_log_file "Errores en chequeo de particiones del disco"           "/var/log/checkdisk.err"
			fi
			;;
		log_cmd )
			print_log_file "Comandos ejecutados"                                       "/var/log/cmd.log";;
		log_RECORDER_LOG )
			print_log_file "Log del grabador"                                          "/data/START_RECORDER_LOG" "./viewRecorderLog";;
		log_WDG )
			print_log_file "Reinicios wavebox (watchdog)"                              "/data/WDG_LOG";;
		log_df )
			print_log_file "Espacio en disco (df)"                                     "/dev/null"                "df";;
		log_estado_swap )
			print_log_file "Estado swap (/proc/swaps)"                                 "/proc/swaps";;
		log_free )
			print_log_file "Uso de memoria (free)"                                     "/dev/null"                "free";;
		log_crontab )
			print_log_file "Procesos Planificados (crontab)"                           "/dev/null"                "crontab -l";;
		log_ifconfig )
			print_log_file "Configuración de Red (ifconfig)"                           "/dev/null"                "ifconfig";;
		log_MAC )
			print_log_file "Información MAC"                                           "/dev/null"                "verMAC";;
		log_ps )
			print_log_file "Procesos en ejecución (ps)"                                "/dev/null"                "verProcesos";;
		log_partitions )
			# Encabezado particiones de disco
			echo "				<tr>
					<td class=\"filaTitulo\" align=\"center\">Particiones de disco</td>
				</tr>
				<tr>
					<td class=\"filaNormal\">
						<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
							<tr>
								<th width=\"32\" align=\"center\">&nbsp;</th>
								<th width=\"32\" align=\"center\">&nbsp;</th>
								<th class=\"filaLogTitulo\" align=\"center\">Major</th>
								<th class=\"filaLogTitulo\" align=\"center\">Minor</th>
								<th class=\"filaLogTitulo\" align=\"right\">Nº bloques</th>
								<th align=\"center\">&nbsp;</th>
								<th class=\"filaLogTitulo\" align=\"left\">Dispositivo</th>
								<th class=\"filaLogTitulo\" align=\"left\">File System Type</th>
							</tr>"

			# Volcado particiones
			STICK_PARTITION=(`df 2> /dev/null | grep SWAP`)
			cat /proc/partitions | tail -n +3 > /tmp/partitions.tmp
			declare -a devs
			while read line; do
				devs=(`echo $line`)
				part="/dev/"${devs[3]}
				tipo_part=""
				FS_DOS=`fdisk -l 2>/dev/null | grep "^${part} " | grep "FAT32" | wc -l`
				[ ${FS_DOS} -eq 1 ] && tipo_part="vfat"
				FS_EXT=`fdisk -l 2>/dev/null | grep "^${part} " | grep "83  Linux" | wc -l`
				[ ${FS_EXT} -eq 1 ] && tipo_part="ext2"
				FS_SWAP=`fdisk -l 2>/dev/null | grep "^${part} " | grep "82  Linux swap" | wc -l`
				[ ${FS_SWAP} -eq 1 ] && tipo_part="swap"

				# Enlaces check/dump
				link_fsck=""
				link_dump=""

				# Comprobar disco completo (minor=0)
				if [ ${devs[1]} -ne 0 ]; then
					# Enlace check: no swap, no tipo swap
					if [ "${part}" != "$STICK_PARTITION" -a ${#tipo_part} -ne 0 -a "${tipo_part}" != "swap" ]; then
						link_fsck="<a title=\"check ${part}\" href=\"javascript:checkHD('${part}','${tipo_part}')\" style=\"text-decoration:none;\"><img src=\"/img/checkHD.png\" width=\"16\" height=\"16\" border=\"0\"></a>"
					fi
					# Enlace dump: solo tipo ext2
					if [ "${tipo_part}" = "ext2" ]; then
						link_dump="<a title=\"dumpe2fs ${part}\" href=\"/cgi-bin/box/estado?id_log=log_partitions&${part}\" style=\"text-decoration:none;\"><img src=\"/img/dumpHD.png\" width=\"16\" height=\"16\" border=\"0\"></a>"
					fi
				fi

				# Alternar tipo fila
				[ "$fila" = "filaImpar" ] && fila="filaPar" || fila="filaImpar"

				# Datos particion
				echo "				<tr class=\"$fila\">
					<td align=\"center\">${link_fsck}</td>
					<td align=\"center\">${link_dump}</td>
					<td class=\"filaLog\" align=\"center\">${devs[0]}</td>
					<td class=\"filaLog\" align=\"center\">${devs[1]}</td>
					<td class=\"filaLog\" align=\"right\">${devs[2]}</td>
					<td align=\"center\">&nbsp;</td>
					<td class=\"filaLog\" align=\"left\">${part}</td>
					<td class=\"filaLog\" align=\"left\">${tipo_part}</td>
				</tr>"
			done < /tmp/partitions.tmp

			# Cerrar tabla
			echo "						</table>
					</td>
				</tr>"

			# Comprobar dump
			dump=`fdisk -l 2>/dev/null | grep "^${id_part}" | wc -l`
			if [ $dump -ne 0 ]; then
				print_log_file "Volcado partición (dumpe2fs -h $id_part)"              "/dev/null"                "dumpe2fs -h $id_part"
			fi
			;;
		log_mount )
			# Encabezado puntos de montaje
			echo "				<tr>
					<td class=\"filaTitulo\" align=\"center\">Puntos de montaje</td>
				</tr>
				<tr>
					<td class=\"filaNormal\">
						<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
							<tr>
								<th width=\"32\" align=\"center\">&nbsp;</th>
								<th width=\"32\" align=\"center\">&nbsp;</th>
								<th align=\"center\">&nbsp;</th>
								<th class=\"filaLogTitulo\" align=\"left\">Dispositivo</th>
								<th class=\"filaLogTitulo\" align=\"left\">Punto de montaje</th>
								<th class=\"filaLogTitulo\" align=\"left\">File System Type</th>
								<th class=\"filaLogTitulo\" align=\"left\">Opciones Montaje</th>
							</tr>"

			# Volcado filesystems
			STICK_PARTITION=(`df 2> /dev/null | grep SWAP`)
			if [ "Z$MAQUINA" = "ZPC" ]; then
				mount | sed -e 's/ on / /g;s/ type / /g;' > /tmp/mounts.tmp
			else
				cat /proc/mounts > /tmp/mounts.tmp
			fi
			declare -a devs
			while read line; do
				isdev=`echo $line | grep "/dev/sd" | wc -l`
				devs=(`echo $line`)
				part=${devs[0]}
				tipo_part=${devs[2]}

				# Enlaces check/dump
				link_fsck=""
				link_dump=""

				# Comprobar tipo de dispositivo
				if [ $isdev -gt 0 ]; then
					# Enlace check: no swap, no tipo swap
					if [ "${part}" != "$STICK_PARTITION" -a ${#tipo_part} -ne 0 -a "${tipo_part}" != "swap" ]; then
						link_fsck="<a title=\"check ${part}\" href=\"javascript:checkHD('${part}','${tipo_part}')\" style=\"text-decoration:none;\"><img src=\"/img/checkHD.png\" width=\"16\" height=\"16\" border=\"0\"></a>"
					fi
					# Enlace dump: solo tipo ext2/3
					if [ "${tipo_part}" = "ext2" -o "${tipo_part}" = "ext3" ]; then
						link_dump="<a title=\"dumpe2fs ${part}\" href=\"/cgi-bin/box/estado?id_log=log_mount&${part}\" style=\"text-decoration:none;\"><img src=\"/img/dumpHD.png\" width=\"16\" height=\"16\" border=\"0\"></a>"
					fi
				fi

				# Alternar tipo fila
				[ "$fila" = "filaImpar" ] && fila="filaPar" || fila="filaImpar"

				# Datos particion
				echo "			<tr class=\"$fila\">
					<td align=\"center\">${link_fsck}</td>
					<td align=\"center\">${link_dump}</td>
					<td align=\"center\">&nbsp;</td>
					<td class=\"filaLog\" align=\"left\">${part}</td>
					<td class=\"filaLog\" align=\"left\"><a href=\"/cgi-bin/box/show${devs[1]}\" title=\"Explorar ${devs[1]}\">${devs[1]}</a></td>
					<td class=\"filaLog\" align=\"left\">${tipo_part}</td>
					<td class=\"filaLog\" align=\"left\">${devs[3]}</td>
				</tr>"
			done < /tmp/mounts.tmp

			# Cerrar tabla
			echo "						</table>
					</td>
				</tr>"

			# Comprobar dump
			dump=`fdisk -l 2>/dev/null | grep "^${id_part}" | wc -l`
			if [ $dump -ne 0 ]; then
				print_log_file "Volcado partición (dumpe2fs -h $id_part)"              "/dev/null"                "dumpe2fs -h $id_part"
			fi

			echo "				<tr>
						<td class=\"filaNormal\" align=\"center\">
							<br>"
			isUSB2mounted=`df 2> /dev/null | grep /var/media/SWAP | wc -l`
			if [ $isUSB2mounted -gt 0 ]; then
				echo "<input type=\"button\" value=\"Desmontar USB2 (/var/media/SWAP)\" class=\"txtInfo\" onclick=\"montarUSB2('desmontar')\">&nbsp;"
			else
				echo "<input type=\"button\" value=\"Montar USB2 en /var/media/SWAP\" class=\"txtInfo\" onclick=\"montarUSB2('montar')\">&nbsp;"
			fi
			echo "			<br>&nbsp;<br>
						</td>
					</tr>"
			if [ -s /var/log/mount_usb2.log ]; then
				print_log_file "Montaje / Desmontaje USB2"                             "/var/log/mount_usb2.log"
			fi
			;;

		log_act_sincro )
			# Encabezado actualizacion sincroguia
			dateFormat=`awk '/LastEPG_Upload/ {print strftime("%d/%m/%Y %H:%M %Z",$2)}' /var/etc/settings.txt`
			echo "				<tr>
					<td class=\"filaTitulo\" align=\"center\">
						Actualización de la Sincroguía ( <font style=\"text-decoration: underline; \">Última actualización: $dateFormat</font> )
					</td>
				</tr>
				<tr>
					<td class=\"filaNormal\" align=\"left\">
						<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
							<tr><td colspan=\"6\" class=\"txtNegrita\" height=\"4\"></td></tr>
							<tr align=\"center\" style=\"font-family:courier new; font-size:12px; text-decoration: underline; font-weight: bold;\">
								<td width=\"10%\">ID Canal</td>
								<td width=\"23%\">Fecha/Hora</td>
								<td width=\"10%\">ID Canal</td>
								<td width=\"23%\">Fecha/Hora</td>
								<td width=\"10%\">ID Canal</td>
								<td width=\"24%\">Fecha/Hora</td>
							</tr>
							<tr><td colspan=\"6\" class=\"txtNegrita\" height=\"4\"></td></tr>"

			# Volcado horas actualizacion sincroguia
			[ -f /data/EPG_Status.txt ] && sort /data/EPG_Status.txt | format-act-sincro.awk

			# Cerrar tabla
			echo "						</table>
					</td>
				</tr>"
			;;

		* ) ;;
	esac

# Estado y uptime
source /usr/local/bin/siesta-version.sh
STgrabacion=([0]="Desconocido" [1]="Sin grabaciones" [2]="Una grabación " [3]="Dos grabaciones" [4]="Sin grabaciones" [5]="Una grabación" [6]="Dos grabaciones")
echo "					<tr><td class=\"filaTitulo\" height=\"4\"></td></tr>
					<tr>
						<td class=\"filaTitulo\" align=\"center\">
							Estado: Video $ModoVideo / ${STgrabacion[$ModoGrabacion]}
							<br><br>
							Versión Firmware: $FIRMWARE_VERSION<br>
							Versión SIESTA: $SIESTA_FIRMWARE_VERSION<br>
							Versión Aplicación Web: $APP_WEB_VERSION
							<br><br>
							Carga del sistema (uptime)
							<pre>`uptime`</pre>
						</td>
					</tr>
				</table>"

# Final html
html_doc_end
