#!/bin/sh
# Lemmi @ m740.info/forum, 2005-09-04 -> GPL

source def-lemmi.inc
#source ../www-setup


#--------------------------------------------------

function print_actions()
{
    echo "<p>"

    [[ $action != view && ${flags/*v*/ok} == "ok" ]] \
	&& echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?view\">VIEW</a>]"

    [[ $action != hexdump ]] \
	&& echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?hexdump\">HEXDUMP</a>]"

    if [[ $action != edit && ${flags/*e*/ok} == "ok" ]]; then
	info=(`ls -l "$PATH_INFO"`)
	[[ ${info[4]} -le 50000 ]] \
	    && echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?edit\">EDIT</a>]"
    fi

    echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?send\">DOWNLOAD</a>]"
}

#--------------------------------------------------

function print_top()
{
 # $1 = title
 # $2 = flags

    #html_begin "$1"
    flags="$2"

    echo "Content-type: text/html"
    echo ""
    echo "<html>"
    echo "<title>M750T - Explorador $1</title>"
    echo "<meta http-equiv=\"refresh\" content=\"600\" />"
    echo "<link href=\"/sincro/img/m740.ico\" rel=\"shortcut icon\"></link>"
    echo "<link href=\"/sincro/css/estilos.css\" rel=\"stylesheet\" type=\"text/css\"></link>"
    echo "<script language=\"JavaScript\" src=\"/sincro/js/ajax.js\"></script>"
    echo "<script language=\"JavaScript\" src=\"/sincro/js/navigator.js\"></script>"
    echo "<script language=\"JavaScript\" src=\"/sincro/js/controlenviar.js\"></script>"
    echo "<script language=\"JavaScript\" src=\"/sincro/js/fechasOp.js\"></script>"
    echo "<body bgcolor=\"#FFFFFF\">"
    echo "  <div align=\"center\"><p><font class=\"titPag\">M750T EPG</font></p></div>"
    echo "  <div align=\"center\"><font class=\"subTitPag\">Explorador de archivos: $1</font></div>"
    echo "  <p>"
    echo "      <div align=\"center\" class=\"txtNormal\"><a href=\"javascript:history.back()\">Atrás</a> | <a href=\"/cgi-bin/sincro/pgmactualXML\">Inicio</a> | <a href=\"/cgi-bin/sincro/parrilla\">Parrilla</a> | "
    echo "      <a href=\"/cgi-bin/crid/timerXML\">Grabaciones Pendientes</a> | <a href=\"/cgi-bin/crid/videoXML\">Grabaciones Realizadas</a> | "
    echo "      <a href=\"/index.html\">Salir</a><br/><br/><a href=\"/osd/osd2tcp.html\">Control OSD</a> | <a href=\"/cgi-bin/box/selectLiveTv\">Ver LiveTV</a> | <a href=\"/sincro/visualizarts.html\">Ver LiveTV-TS</a> | <a href=\"/ssh/sshconn.html\">SSH</a></div>"
    echo "  </p>"
    echo "  <table width=\"98%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\"  class=\"borderTabla2\">"
    echo "  <tr>"
    echo "    <td class=\"fila titTabla\"  bgcolor=\"#ffb310\">"

    line=`basename "$PATH_INFO"`
    tmppath=`dirname "$PATH_INFO"`
    export PATH_PREFIX="$tmppath/$line"
    if [[ "$PATH_PREFIX" == "///" ]]; then
	export PATH_PREFIX=""
	line=""
    fi

    while [[ "$tmppath" != "/" ]]; do
	    tmpfile=`basename "$tmppath"`
	    tmppath=`dirname "$tmppath"`
	    line="<font class=\"titChannel\"><a href=\"$SCRIPT_NAME$tmppath/$tmpfile\">$tmpfile</a> / $line</font>"
    done
    echo "<a class=\"titChannel\" href=\"$SCRIPT_NAME/\">&nbsp;/</a> $line"

    realpath=`realpath "$PATH_INFO"`
    if [[ "$PATH_INFO" != "$realpath" ]]; then
    
    	echo " &nbsp; (symbolic link in path)<br>"
    	#echo "[<a class=\"titChannel\" href=\"ftp://`hostname -f`$realpath\">FTP</a>] &nbsp;"
    
    	tmpfile=`basename "$realpath"`
    	tmppath=`dirname "$realpath"`
    	line="<a class=\"titChannel\" href=\"$SCRIPT_NAME$tmppath/$tmpfile\">$tmpfile</a>"
    
    	while [[ "$tmppath" != "/" ]]; do
    	    tmpfile=`basename "$tmppath"`
    	    tmppath=`dirname "$tmppath"`
    	    line="<a class=\"titChannel\" href=\"$SCRIPT_NAME$tmppath/$tmpfile\">$tmpfile</a> / $line"
    	done
    	echo "<a class=\"titChannel\" href=\"$SCRIPT_NAME/\">&nbsp;/</a> $line"
    fi
    echo "  </td></tr>"
}

#--------------------------------------------------

function print_bottom()
{
    echo "  </table>"
    echo "  <table width=\"98%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\">"
    echo "  <tr>"
    echo "    <td class=\"txtNormal\" align=\"right\">Explorador basado en código de <a href=\"http://www.open7x0.org/wiki/Benutzer:Lemmi\">Lemmi</a> bajo licencia <a href=\"http://www.gnu.de/gpl-ger.html\">GPL</a></td>"
    echo "  </tr>"
    echo "  </table>"
    echo "  <p>"
    echo "      <div align=\"center\" class=\"txtNormal\"><a href=\"javascript:history.back()\">Atrás</a> | <a href=\"/cgi-bin/sincro/pgmactualXML\">Inicio</a> | <a href=\"/cgi-bin/sincro/parrilla\">Parrilla</a> | "
    echo "      <a href=\"/cgi-bin/crid/timerXML\">Grabaciones Pendientes</a> | <a href=\"/cgi-bin/crid/videoXML\">Grabaciones Realizadas</a> | "
    echo "      <a href=\"/index.html\">Salir</a><br/><br/><a href=\"/osd/osd2tcp.html\">Control OSD</a> | <a href=\"/cgi-bin/box/selectLiveTv\">Ver LiveTV</a> | <a href=\"/sincro/visualizarts.html\">Ver LiveTV-TS</a> | <a href=\"/ssh/sshconn.html\">SSH</a><br/><br/>"
    echo "      <a href=\"/autores.html\">Autores</a> | <a href=\"/cgi-bin/sincro/verlog\">Ver Log</a> | <a href=\"/cgi-bin/box/estado\">Ver Estado</a></div>"
    echo "  </p>"
    echo "</body>"
    echo "</html>"
}

#--------------------------------------------------

function view()
{
    action=view
    if [[ ${1/*v*/ok} == ok ]]; then
	print_top "$PATH_INFO" "$1"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
	print_actions
	echo -n "<pre style=\"background-color:#FFEEE6; padding:.2em\" >"
	$3 "$PATH_INFO" | head -c 1000000 | sed 's/&/\&amp;/g;s/</\&lt;/g'
	echo "</pre>"
	print_actions
	print_bottom
    elif [[ ${1/*s*/ok} == ok ]]; then
	send $*
    else
	hexdump $*
    fi
}

#--------------------------------------------------

function hexdump()
{
    action=hexdump
    print_top "$PATH_INFO" "$1"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    print_actions
    echo -n "<pre>"
    head -c 1000000 "$PATH_INFO" | hexdump16 | sed 's/&/\&amp;/g;s/</\&lt;/g'
    echo "</pre>"
    print_actions
    echo "</td></tr>"
    print_bottom
}

#--------------------------------------------------

function send()
{
    echo "Content-type: $2"
    echo "Expires: "`date -R`
    echo ""
    shift
    cat "$PATH_INFO"
}

#--------------------------------------------------

function edit()
{
    info=(`ls -l "$PATH_INFO"`)
    if [[ ${1/*e*/ok} == "ok" && ${info[4]} -le 50000 ]]; then
	print_top "$PATH_INFO" "$1"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
	print_actions

	cat <<- ---EOT---
		<div>
		<form method="post" action="$SCRIPT_NAME$PATH_INFO?write">
		<textarea wrap="virtual" name="text" rows=28 cols=82 maxlength=60000>
		`sed 's/&/\&amp;/g;s/</\&lt;/g' "$PATH_INFO"`
		</textarea>
		<br>
		<input type="Submit" value="Grabar">
		<input type="Reset" value="Deshacer Cambios">
		</form>
		</div>
		---EOT---
	print_actions
    echo "</td></tr>"
	print_bottom
    else
	view $*
    fi
}

#--------------------------------------------------

function write()
{
    sed -e 's/text=//' -e 's/%0D//g' | ./post2iso >"${PATH_INFO}"
    view $*
}

#--------------------------------------------------

PATH_INFO=`echo $PATH_INFO | sed 's+/*$++'`
[[ "$PATH_INFO" == "" ]] && PATH_INFO="/"

if [[ ! -a "$PATH_INFO" ]]; then
    print_top "Unbekannte $PATH_INFO"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    echo "<p>Die Datei existiert nicht."
    echo "</td></tr>"
    print_bottom
elif [[ -d "$PATH_INFO" ]]; then
    print_top "$PATH_INFO"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    echo -n "<pre style=\"background-color: #FFEEE6; padding: .2em; font-family: \'Lucida Console\'; color: black;\">"
    ls -la "$PATH_INFO/" | awk -f $0.awk -v "path=$PATH_INFO" -v "uri=$SCRIPT_NAME$PATH_INFO"
    echo "</pre>"
    echo "</td></tr>"
    print_bottom
elif [[ -b "$PATH_INFO" ]]; then
    print_top "Block-Special-File $PATH_INFO"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    echo "<p>Block-Special-File mit Id "`ls -l "$PATH_INFO" | awk '{printf("%s%s\n",$5,$6)}'`
    echo "</td></tr>"
    print_bottom
elif [[ -c "$PATH_INFO" ]]; then
    print_top "Character-Special-File $PATH_INFO"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    echo "<p>Character-Special-File mit Id "`ls -l "$PATH_INFO" | awk '{printf("%s%s\n",$5,$6)}'`
    echo "</td></tr>"
    print_bottom
elif [[ ! -f "$PATH_INFO" ]]; then
    print_top "Fichero no encontrado $PATH_INFO"
    echo "  <tr>"
    echo "    <td class=\"fila\">"
    echo "<p>Der Typ der Datei ist unbekannt."
    echo "</td></tr>"
    print_bottom
else
    mode="${QUERY_STRING%%=*}"
    [[	   "$mode" == "send" \
    	|| "$mode" == "hexdump" \
	|| "$mode" == "edit" \
	|| "$mode" == "write" \
    ]] && action="$mode" || action=view

    # flags: (Wichtig ist, dass der Buchstabe vorhanden ist)
    #	t--- : tar
    #	c--- : crid
    #   -e-- : edit possible
    #   --v- : view possible
    #   ---s : send instead of viewing
    
    case "$PATH_INFO" in

	#--------------------------------------------------------------------
	# file-type	action	flags	mime-type		view-cmd
	#--------------------------------------------------------------------

	*.tar.bz2)	$action t-v-	application/x-bzip2	"tar tjvf" ;;
	*.tar.gz|*.tgz)	$action t-v-	application/x-gzip	"tar tzvf" ;;

	*.bz2)		$action --v-	application/x-bzip2	bzcat ;;
	*.gz)		$action --v-	application/x-gzip	zcat ;;

	*.avi)		$action ----	video/x-msvideo		;;
	*.bmp)		$action ---s	image/bmp		;;
	*.crid)		$action c---	application/x-crid	;;
	*.gif)		$action ---s	image/gif		;;
	*.html|*.htm)	$action -e-s	text/html		;;
	*.jpeg|*.jpg)	$action ---s	image/jpeg		;;
	*.mpeg|*.mpg)	$action ---s	video/mpeg		;;
	*.mpga|*.mp3)	$action ---s	audio/mpeg		;;
	*.png)		$action ---s	image/png		;;
	*.tar)		$action t---	application/x-tar	"tar tcf" ;;
	*.tiff|*.tif)	$action ---s	image/tiff		;;
	*.txt)		$action -ev-	text/plain		cat ;;
	*.awk)		$action -ev-	text/plain		cat ;;
	*.crontab)		$action -ev-	text/plain		cat ;;
	*.sh)		$action -ev-	text/plain		cat ;;
	*.cfg)		$action -ev-	text/plain		cat ;;
	*.wav)		$action ----	audio/x-wav		;;
	*.wsw)		$action ----	application/x-wsw	;;
	*.zip)		$action ----	application/zip		;;

	rc.*|halt.*)	$action -ev-	text/plain		cat ;;

	*.*)		$action --v-	application/x-unknown	cat ;;
	*)		$action -ev-	application/x-unknown	cat ;;

    esac
fi
