#!/bin/sh
# by pepper 28/03/2007
# Retorna la Sincroguía en XML de 1 canal
# 27/6/2007 Se añade el codigo para la generacion de la caché de la parrilla completa de la Sincroguía

# Ejecutamos el script con baja prioridad
renice 20 $$ > /dev/null

source ../www-setup

if [ $# != 2 ] ; then
	numChannel=0
else
	numChannel=$2
fi
if  [ "$3" != "" ]; then
    horaUTCinicial=$3
else
    horaUTCinicial=`date +%s`
fi

# Comprobamos si el directorio de imagenes de la sincro de la carpeta de grabaciones esta accesible
if [ -d $SERVER_ROOT/sincro/epg/ ]; then
    DIR_IMG_SINCRO_ACCESIBLE=si
else
    DIR_IMG_SINCRO_ACCESIBLE=no
fi

CHANNEL_ID=`echo $1 | cut -d"_" -f2 | cut -d"." -f1`
CACHE_FILE=${Cache}/sincrochannelXML.cache.$CHANNEL_ID

echo -n "" > ${CACHE_FILE}
if [ -f $1 ]; then
    . ./channelXML $1 ${CACHE_FILE}.temp $numChannel >> ${CACHE_FILE} 2>> $Cache/sincro.cache.err
fi
sort ${CACHE_FILE}.temp > ${CACHE_FILE}.text
rm -f ${CACHE_FILE}.temp

#######################################################################
# A partir de aqui inserto el nuevo codigo de generacion de la cache
# de la parrilla completa de la sincro, en formato HTML
#######################################################################
if [ $horaUTCinicial -ge 0 ]; then
    dateIniAnt=""
    cacheHTMLFile=${CACHE_FILE}.html
    echo -n "" > ${CACHE_FILE}.html
    sincronyzed=0
    primerPase=0
    porcentHeight=4
    
    while read line
    do
        dateIni=`echo $line | cut -d"_" -f1`
        dateFormat=`echo $line | cut -d"_" -f4`
        titulo=`echo $line | cut -d"_" -f6`
        pidcid=`echo $line | cut -d"_" -f3`
        longs=`echo $line | cut -d"_" -f5`
        imagen=`echo $line | cut -d"_" -f8`
        if [ $primerPase -eq 1 ]; then
            if [ $dateIniAnt -ge $horaUTCinicial ]; then
                # Sincronizamos con la parrilla general el primer programa del canal actual
                if [ $sincronyzed -eq 0 ]; then
                    height=$(((($dateIniAnt-$horaUTCinicial)/100)*${porcentHeight}))
                    if [ $height -gt 0 ]; then
                        echo "<tr height=\"$height\"><td background=\"/sincro/img/capa6.gif\" class=\"borderFila txtMuyPeq\"></td></tr>" >> ${cacheHTMLFile}
                    fi
                    sincronyzed=1
                fi
                
                duration=$((dateIni-dateIniAnt))
                # Los programas de duracion inferior a 2,5 minutos, no caben en la parrilla
                if [ $duration -gt 150 ]; then
                    # Calculamos el tamaño de la celda, en relacion a la duracion del programa
                    height=$(((duration/100)*${porcentHeight}))
                    echo -n "<tr height=\"$height\">" >> ${cacheHTMLFile}
                    if [ $duration -lt 600 ]; then
                        echo -n "<td class=\"borderFila txtMuyPeq\" align=\"center\">" >> ${cacheHTMLFile}
                    elif [ $duration -le 1800 ]; then
                        echo -n "<td class=\"borderFila txtPeq\" align=\"center\">" >> ${cacheHTMLFile}
                    else
                        echo -n "<td class=\"borderFila txtNormal\" align=\"center\">" >> ${cacheHTMLFile}
                    fi
                    contenidoHTML=""
                    if [ $duration -gt 2200 ]; then
                        contenidoHTML="${contenidoHTML}<a href='javascript:record(\"$pidcidAnt\", 0, \"$tituloAnt\")' title=\"Grabar\"><img src=\"/sincro/img/red_ball.gif\" alt=\"Grabar\" width=\"18\" height=\"18\" border=\"0\"></a>&nbsp;"
                        contenidoHTML="${contenidoHTML}<a href='javascript:record(\"$pidcidAnt\", 1, \"$tituloAnt\")' title=\"Grabar en Serie\"><img src=\"/sincro/img/blue_ball.gif\" alt=\"Grabar en Serie\" width=\"18\" height=\"18\" border=\"0\"></a><br>"
                    fi
                    
                    if [ $duration -ge 1500 ]; then
                        contenidoHTML="${contenidoHTML}${dateFormatAnt}<br>"
                    fi
                    
                    if [ $duration -gt 3060 -a "$MOSTRAR_MINI_IMG" = "si" ]; then
                        if [ "$OBTENER_IMG_INET" = "si" -a "$imagenAnt" != "" ]; then
                            urlimg="http://www.inout.tv/fotos/$imagenAnt"
                        else
                            if [ "$DIR_IMG_SINCRO_ACCESIBLE" = "si" -a "$imagenAnt" != "" ]; then
                                urlimg="/sincro/epg/$imagenAnt"
                            else
                                urlimg="/sincro/img/epg_long_img.png"
                            fi
                        fi
                        contenidoHTML="${contenidoHTML}<a href=\"javascript:detail('$pidcidAnt', '$imagenAnt', '$longsAnt', '$CHANNEL_ID', '$dateIniAnt');\" title=\"$CHANNEL_ID - $dateFormatAnt - $tituloAnt\"><img src="$urlimg" width=77 height=52 border=2 alt=\"$CHANNEL_ID - $dateFormatAnt - $tituloAnt\"></a><br>"
                    fi
                    contenidoHTML="${contenidoHTML}<a href=\"javascript:detail('$pidcidAnt', '$imagenAnt', '$longsAnt', '$CHANNEL_ID', '$dateIniAnt');\" title=\"$CHANNEL_ID - $dateFormatAnt - $tituloAnt\">$tituloAnt</a>"
                    
                    #Si el programa es muy largo (más de 4 horas), ponemos la info 2 veces (a petición de Shark).
                    if [ $duration -ge 14400 ]; then
                        if [ $duration -gt 36000 ]; then
                            contenidoHTML="${contenidoHTML}<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>${contenidoHTML}"
                        elif [ $duration -ge 18000 ]; then
                            contenidoHTML="${contenidoHTML}<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>${contenidoHTML}"
                        else
                            contenidoHTML="${contenidoHTML}<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>${contenidoHTML}"
                        fi
                    fi
                    echo "${contenidoHTML}</td></tr>" >> ${cacheHTMLFile}
                fi
            fi
        else
            primerPase=1
        fi
        
        dateIniAnt=$dateIni
        dateFormatAnt=$dateFormat
        tituloAnt=$titulo
        pidcidAnt=$pidcid
        imagenAnt=$imagen
        longsAnt=$longs
    done < ${CACHE_FILE}.text
fi
#######################################################################
# Fin del nuevo codigo
#######################################################################
