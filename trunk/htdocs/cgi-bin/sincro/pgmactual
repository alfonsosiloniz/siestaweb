#!/bin/bash
# pepper, jotabe, (c) Grupo SIESTA, 11-01-2008
#
# Retorna la sincroguia con el programa actual para todos los canales

# Ejecutamos el script con baja prioridad
renice 20 $$ > /dev/null

# Configurar entorno
source ../www-setup.shi
source fweb.shi
validate_login
LCK_SINCRO=${Cache}/cache.sincro.generating
LOG_SINCRO=${Cache}/cache.sincro.log
LOG=${Cache}/cache.pgmactual.log
ERR=${Cache}/cache.pgmactual.err
SORT_CHIDS=${Cache}/sort_chIDs.txt
INFO_CHANNELS=${Cache}/info_channels.txt
now=`date +%s`

# Comprobar directorio de imagenes de sincroguia en carpeta de grabaciones
if [ -d $SERVER_ROOT/img/epg/ ]; then
	DIR_IMG_SINCRO_ACCESIBLE=si
else
	DIR_IMG_SINCRO_ACCESIBLE=no
fi

# Comprobar generacion cache XML
info=""
if [ ! -f ${LOG_SINCRO} ]; then
	info="No se puede mostrar la información sobre el programa actual porque no se ha generado todavía el caché.
	<br><br>
	Puede ir a la página de <a href=\"/cgi-bin/box/estado\">estado</a> para generarlo ahora"
# Comprobar marca de generacion de cache XML
elif [ -f ${LCK_SINCRO} ]; then
	info="No se puede mostrar la información sobre el programa actual porque en este momento se está generando el caché.
	<br><br>
	Puede ir a la pagina de <a href=\"/cgi-bin/box/estado\">estado</a> para comprobar el proceso"
fi

# Mostrar error o procesar carpeta
if [ ${#info} -ne 0 ]; then
	# Enviar documento html
	html_doc_start "M750T - Sincroguía" "" "-----b-"
	html_top "<a href=\"http://www.inout.tv/SincroGuia\" target=\"_blank\"><img src=\"/img/sincro.gif\" border=\"0\"/></a>proporcionada por InOut TV" "" "" ""
	print_aviso_info "${info}"
else
	# Log del proceso
	utc_inicio=`date +%s`
	echo "`date` Inicio generación XML de Programa Actual [host: `hostname`]" > $LOG
	echo -n "" > $ERR

	# Enviar documento xml con programa actual
	xml_doc "/xsl/sincro.xsl"
	echo "<M750>
	<SINCROGUIA actual=\"0\" titulo=\"Sincroguía\" subtitulo=\"proporcionada por InOut TV\" miniatures=\"$MOSTRAR_MINI_IMG\" getImgInet=\"$OBTENER_IMG_INET\" localSincroImgAcc=\"$DIR_IMG_SINCRO_ACCESIBLE\">"

	# Recorrer lista de canales
	if [ -f $SORT_CHIDS ]; then
		for chID in `cat $SORT_CHIDS`; do
			# Obtener cache de canal
			CHANNEL_CACHE=${Cache}/cache.$chID

			# Comprobar cache de canal
			if [ -f ${CHANNEL_CACHE}.text ]; then
				# Comprobar generacion de caché de canal
				if [ ! -f ${CHANNEL_CACHE}.generating ]; then
					# Obtener datos canal (numChannel, cid, chID, chName)
					eval `www-tools infoID ${chID} ${INFO_CHANNELS}`

					# Log del proceso
					printf "`date` Canal [%3s]: text->programa_actual" "$chID" >> $LOG

					# Obtener programa actual de fichero .text
					echo "<CHANNEL numChannel=\"$numChannel\" cid=\"$cid\" chID=\"${chID}\" chName=\"$chName\" file=\"${CHANNEL_CACHE}.text\" >"
					www-tools text2pgact ${chID} ${CHANNEL_CACHE}.text ${now} 2>> $ERR
					ST_text2pgact=$?
					echo "</CHANNEL>"
					if [ $ST_text2pgact -ne 0 ]; then
						echo " <b>ERROR</b>" >> $LOG
					else
						# Resultado generacion OK
						echo " = OK" >> $LOG
					fi
				fi
			fi
		done
	else
		echo "`date` Datos de canales no encontrados (${SORT_CHIDS})" >> $LOG
	fi

	# Final xml
	echo "	</SINCROGUIA>
</M750>"

	# Log del proceso
	utc_final=`date +%s`
	tiempo_proceso=`TZ=UTC awk "BEGIN {print strftime( \"%H:%M:%S\", $(($utc_final-$utc_inicio))) }"`
	echo "`date` Fin generación XML de Programa Actual [host: `hostname`], Tiempo generación: ${tiempo_proceso}" >> $LOG
fi
