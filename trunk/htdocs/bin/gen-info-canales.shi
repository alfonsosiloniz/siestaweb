#!/bin/bash
# (c) Grupo SIESTA, 10-10-2007
#
# Generar ficheros de datos de canales.
# $SORT_CHIDS    -> Fichero de ordenacion de identificadores de canales
# $SORT_CHANNELS -> Fichero de ordenacion de canales
# $INFO_CHANNELS -> Fichero de informacion de canales
#
# Este script es incluido desde otros, no debe invocarse directamente

# Ejecutamos el script con baja prioridad
renice 20 $$ > /dev/null

# Configurar entorno
# source ../cgi-bin/www-setup.shi
CFG_DIR=/var/etc
SORT_CHIDS=${Cache}/sort_chIDs.txt
SORT_CHANNELS=${Cache}/sort_channels.txt
INFO_CHANNELS=${Cache}/info_channels.txt

# Generar ficheros vacios
echo -n "" > $SORT_CHIDS
echo -n "" > $SORT_CHANNELS
echo -n "" > $INFO_CHANNELS

# Recorrer user_services.txt
i=1
while read line; do
	id=`echo $line | cut -d":" -f2`
	if [ "Z$id" != "Z" ]; then
		exists=`grep ${id}$ $CFG_DIR/services.txt | wc -l`
		if [ $exists -eq 1 ]; then
			chName=`grep ${id}$ $CFG_DIR/services.txt | cut -b0-20 | awk 'gsub(/[ \t]+$/, "", $0)'`
			chID=`grep -i "${chName}" $CFG_DIR/eps_mapping.txt | grep -i "^${chName}:" | head -1 | cut -d"," -f2`
			# Añadir a lista de programas y canales
			echo "${i}:${id}:${chID}:${chName}:" >> $INFO_CHANNELS
			# Si existe chID se añade a listas ordenadas de canales y chIDs
			if [ ${#chID} -ne 0 ]; then
				echo "$EPG_PATH/IO_${chID}.db" >> $SORT_CHANNELS
				echo "${chID}" >> $SORT_CHIDS
			fi
			# Nuevo numero de programa
			i=$((i+1))
		fi
	fi
done < $CFG_DIR/user_services.txt
