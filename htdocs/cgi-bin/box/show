#!/bin/bash
# Lemmi @ m740.info/forum, 2005-09-04 -> GPL
# jotabe, (c) Grupo SIESTA, 25-07-2007
#
# Explorador de archivos para gigaset

# Configurar entorno
#source def-lemmi.inc
#source ../www-setup
source ../fweb.shi
source ./fshow.shi
alert=""

#--------------------------------------------------
# Accion view
# $1 flags
# $2 mime-type
# $3 view-cmd
#--------------------------------------------------
function view() {
	# Accion view
	action=view

	# Comprobar flags, 1º view
	if [ ${1/*v*/ok} == ok ]; then
		print_top "$PATH_INFO" "$1" ""
		echo "			<tr>"
		echo "				<td class=\"fila\">"
		print_actions
		echo -n "<pre style=\"background-color:#FFEEE6; padding:.2em\" >"
		$3 "$PATH_INFO" | head -c 1000000 | sed 's/&/\&amp;/g;s/</\&lt;/g'
		echo "</pre>"
		print_actions
		echo "				</td>"
		echo "			</tr>"
		print_bottom
	# Comprobar download
	elif [ ${1/*s*/ok} == ok ]; then
		send $*
	# En ultimo lugar hexdump
	else
		hexdump $*
	fi
}

#--------------------------------------------------
# Accion hexdump
# $1 flags
# $2 mime-type
# $3 view-cmd
#--------------------------------------------------
function hexdump() {
	# Accion hexdump
	action=hexdump

	# Enviar contenido html
	print_top "$PATH_INFO" "$1" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	print_actions
	echo -n "<pre>"
	head -c 1000000 "$PATH_INFO" | hexdump16 | sed 's/&/\&amp;/g;s/</\&lt;/g'
	echo "</pre>"
	print_actions
	echo "				</td>"
	echo "			</tr>"
	print_bottom
}

#--------------------------------------------------
# Accion hexdump
# $1 flags
# $2 mime-type
# $3 view-cmd
#--------------------------------------------------
function send() {
	echo "Content-type: $2"
	#realTotalBytes=(`wc -c $PATH_INFO`)
	#echo "Content-length: $realTotalBytes"
	echo "Expires: "`date -R`
	echo ""
	shift
	cat "$PATH_INFO"
}

#--------------------------------------------------
# Accion hexdump
# $1 flags
# $2 mime-type
# $3 view-cmd
#--------------------------------------------------
function edit() {
	info=(`ls -l "$PATH_INFO"`)
	if [[ ${1/*e*/ok} == "ok" && ${info[4]} -le 50000 ]]; then
		print_top "$PATH_INFO" "$1" "$SCRIPT_NAME$PATH_INFO?write"
		echo "			<tr>"
		echo "				<td class=\"fila\">"
		print_actions
		echo "<textarea wrap=\"virtual\" name=\"text\" rows=28 cols=82 maxlength=60000>"
		sed 's/&/\&amp;/g;s/</\&lt;/g' "$PATH_INFO"
		echo "</textarea>"
		echo "					<br>"
		echo "					<input type=\"Submit\" value=\"Grabar\">"
		echo "					<input type=\"Reset\" value=\"Deshacer Cambios\">"
		print_actions
		echo "				</td>"
		echo "			</tr>"
		print_bottom
	else
		view $*
	fi
}

#--------------------------------------------------

function write() {
	sed -e 's/text=//;s/%0D//g' | ./post2iso > "${PATH_INFO}"
	# Si el fichero está bajo /var/etc, llamamos tambien a /sbin/flash_archive, para grabar los cambios en la flash
	isFlash=`echo "${PATH_INFO}" | grep "/var/etc" | wc -l`
	if [ $isFlash -gt 0 ]; then
		echo "/sbin/flash_archive write ${PATH_INFO}" >> /tmp/flash_archive.log
		/sbin/flash_archive write ${PATH_INFO} >> /tmp/flash_archive.log 2>> /tmp/flash_archive.log
		alert="Los cambios del fichero ${PATH_INFO} se han grabado de forma persistente en FlashRAM"
	fi
	view $*
}

#--------------------------------------------------

PATH_INFO=`echo $PATH_INFO | sed 's+/*$++'`
[[ "$PATH_INFO" == "" ]] && PATH_INFO="/"

# Comprobar existencia fichero
if [[ ! -a "$PATH_INFO" ]]; then
	print_top "No encontrado $PATH_INFO" "" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	echo "					<p>Fichero no encontrado."
	echo "				</td>"
	echo "			</tr>"
	print_bottom
# Comprobar carpeta
elif [[ -d "$PATH_INFO" ]]; then
	print_top "$PATH_INFO" "" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	echo -n "<pre style=\"background-color: #FFEEE6; padding: .2em; font-family: \'Lucida Console\'; color: black;\">"
	ls -la "$PATH_INFO/" | awk -f $0.awk -v "path=$PATH_INFO" -v "uri=$SCRIPT_NAME$PATH_INFO"
	echo "</pre>"
	echo "				</td>"
	echo "			</tr>"
	print_bottom
# Comprobar fichero bloque
elif [[ -b "$PATH_INFO" ]]; then
	print_top "Fichero-Especial-Bloque $PATH_INFO" "" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	echo "					<p>Fichero especial de bloque con ID "`ls -l "$PATH_INFO" | awk '{printf("%s%s\n",$5,$6)}'`
	echo "				</td>"
	echo "			</tr>"
	print_bottom
# Comprobar fichero caracter
elif [[ -c "$PATH_INFO" ]]; then
	print_top "Fichero-Especial-Caracter $PATH_INFO" "" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	echo "					<p>Fichero especial de caracter con ID "`ls -l "$PATH_INFO" | awk '{printf("%s%s\n",$5,$6)}'`
	echo "				</td>"
	echo "			</tr>"
	print_bottom
# Comprobar fichero normal
elif [[ ! -f "$PATH_INFO" ]]; then
	print_top "Tipo desconocido $PATH_INFO" "" ""
	echo "			<tr>"
	echo "				<td class=\"fila\">"
	echo "					<p>Tipo de fichero desconocido."
	echo "				</td>"
	echo "			</tr>"
	print_bottom
else
	# Obtener acccion, por defecto view
	mode="${QUERY_STRING%%=*}"
	[[ "$mode" == "send" \
	|| "$mode" == "hexdump" \
	|| "$mode" == "edit" \
	|| "$mode" == "write" \
	]] && action="$mode" || action=view

	# flags: (Wichtig ist, dass der Buchstabe vorhanden ist)
	#	t--- : tar
	#	c--- : crid
	#   -e-- : edit possible
	#   --v- : view possible
	#   ---s : send instead of viewing

    case "$PATH_INFO" in
	#--------------------------------------------------------------------
	# file-type		action	flags	mime-type			view-cmd
	#--------------------------------------------------------------------
	*.tar.bz2)		$action t-v-	application/x-bzip2		"tar tjvf"	;;
	*.tar.gz|*.tgz)	$action t-v-	application/x-gzip		"tar tzvf"	;;
	*.bz2)			$action --v-	application/x-bzip2		bzcat		;;
	*.gz)			$action --v-	application/x-gzip		zcat		;;
	*.avi)			$action ----	video/x-msvideo						;;
	*.bmp)			$action ---s	image/bmp							;;
	*.crid)			$action c---	application/x-crid					;;
	*.gif)			$action ---s	image/gif							;;
	*.html|*.htm)	$action -e-s	text/html							;;
	*.jpeg|*.jpg)	$action ---s	image/jpeg							;;
	*.mpeg|*.mpg)	$action ---s	video/mpeg							;;
	*.idx)			$action ---s	application/x-idx					;;
	*.midx)			$action ---s	application/x-midx					;;
	*.fmpg)			$action ---s	video/mpeg							;;
	*.mpga|*.mp3)	$action ---s	audio/mpeg							;;
	*.png)			$action ---s	image/png							;;
	*.tar)			$action t---	application/x-tar		"tar tcf"	;;
	*.tiff|*.tif)	$action ---s	image/tiff							;;
	*.txt)			$action -ev-	text/plain				cat			;;
	*.awk)			$action -ev-	text/plain				cat			;;
	*.crontab)		$action -ev-	text/plain				cat			;;
	*.sh)			$action -ev-	text/plain				cat			;;
	*.cfg)			$action -ev-	text/plain				cat			;;
	*.wav)			$action ----	audio/x-wav							;;
	*.wsw)			$action ----	application/x-wsw					;;
	*.zip)			$action ----	application/zip						;;
	rc.*|halt.*)	$action -ev-	text/plain				cat			;;
	*.*)			$action --v-	application/x-unknown	cat			;;
	*)				$action -ev-	application/x-unknown	cat			;;
    esac
fi
