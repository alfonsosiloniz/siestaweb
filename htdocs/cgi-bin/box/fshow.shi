#!/bin/bash
# Lemmi @ m740.info/forum, 2005-09-04 -> GPL
# jotabe, (c) Grupo SIESTA, 08-08-2007
#
# Definicion funciones de explorador de archivos para gigaset
# $SCRIPT_NAME	-> Script del explorador
# $PATH_INFO	-> Fichero a mostrar
# $action		-> Accion
# $flags		-> Flags de acciones
#
# Este script es incluido desde otros, no debe invocarse directamente

#--------------------------------------------------
# Enviar comienzo pagina
# $1 Titulo
# $2 Flags
# $3 Funcion form action (post)
#--------------------------------------------------
function print_top() {
    flags="$2"

	# Enviar documento html
	html_doc_start "M750T - Explorador $1" 600 "-an-efb-"

	# Respuesta html
	onload=""
	[ "Z$alert" != "Z"  ] && onload="alert('$alert');"

	# Funcion form action
	if [ "Z$3" = "Z"  ]; then
		html_top "Explorador de archivos: $1" "$onload" "" ""
	else
		html_top "Explorador de archivos: $1" "$onload" "$3" "post"
	fi

	# Comienzo tabla
	echo "		<br>
		<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\" class=\"borderTabla2\">
			<tr>
				<td class=\"fila titTabla\"  bgcolor=\"#ffb310\">"

	# Imprimir path fichero con enlaces
	print_path "$PATH_INFO"

	# Comprobar enlaces simbolicos
	realpath=`realpath "$PATH_INFO"`
	if [ $? -eq 0 -a "$PATH_INFO" != "$realpath" ]; then
		# Añadir mensaje de enlace simbolico
		echo "&nbsp;(enlace simbólico en la ruta)<br>"
		# Imprimir path de ruta real con enlaces
		print_path "$realpath" "si"
	fi

	# Cerrar fila/columna
	echo "				</td>"
	echo "			</tr>"
}

#--------------------------------------------------
# Imprimir path de fichero con enlaces
# $1 Path
# $2 Resaltar parte fichero
#--------------------------------------------------
function print_path() {
	# Inicializar variables
	tmp_file=`basename "$1" 2>/dev/null`
	tmp_path=`dirname "$1" 2>/dev/null`

	# Comprobar resalte parte fichero
	if [ "Z$2" != "Zsi" ]; then
		tmp_line=$tmp_file
	else
		tmp_line="<a class=\"titChannel\" href=\"$SCRIPT_NAME$tmp_path/$tmp_file\">$tmp_file</a>"
	fi

	# Recorrer carpetas poniendo enlaces
	while [ ${#tmp_path} -gt 1 ]; do
		tmp_file=`basename "$tmp_path" 2>/dev/null`
		tmp_path=`dirname "$tmp_path" 2>/dev/null`
		[ "$tmp_path" == "/" ] && tmp_path=""
		tmp_line="<a class=\"titChannel\" href=\"$SCRIPT_NAME$tmp_path/$tmp_file\">$tmp_file</a>&nbsp;/&nbsp;$tmp_line"
	done

	# Mostrar path
	echo "					<a class=\"titChannel\" href=\"$SCRIPT_NAME/\">&nbsp;/</a>&nbsp;$tmp_line"
}

#--------------------------------------------------
# Imprimir acciones
#--------------------------------------------------
function print_actions() {
	# Separador
	echo "<p>"
	# Accion view
	[ $action != view -a ${flags/*v*/ok} == ok ] && echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?view\">VIEW</a>]"
	# Accion hexdump
	[ $action != hexdump ] && echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?hexdump\">HEXDUMP</a>]"
	# Accion edit si tamaño fichero es menor de 50000
	if [ $action != edit -a ${flags/*e*/ok} == ok ]; then
		if [ -f $PATH_INFO ]; then
			info=`ls -l "$PATH_INFO" 2>/dev/null | awk '{print $5}'`
			[ ${info} -le 50000 ] && echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?edit\">EDIT</a>]"
		fi
	fi
	# Accion download
	echo "[<a class=\"txtNormal\" href=\"$SCRIPT_NAME$PATH_INFO?send\">DOWNLOAD</a>]"
	# Separador
	echo "</p>"
}

#--------------------------------------------------
# Enviar final pagina
#--------------------------------------------------
function print_bottom() {
	echo "		</table>
		<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\">
			<tr>
				<td class=\"txtNormal\" align=\"right\">Explorador basado en código de <a href=\"http://www.open7x0.org/wiki/Benutzer:Lemmi\" target=\"_blank\">Lemmi</a> bajo licencia <a href=\"http://www.gnu.de/gpl-ger.html\" target=\"_blank\">GPL</a></td>
			</tr>
		</table>"
	html_doc_end
}
