#!/bin/bash
# pepper, jotabe, (c) Grupo SIESTA, 16-04-2008
#
# Borrar grabacion (fichero .crid, el resto se elimina en proceso de limpieza)
# borrarGrabacion?num_CRIDFILE=X&CRIDFILE1=crid...&CRIDFILEX=crid&TS=timestamp

# Configurar entorno
source ../www-setup.shi
source fweb.shi
validate_login "xml"
LOG=/var/log/delete-crid.log
SCRIPT=/tmp/delete-crid.sh

# Procesar parametros get/post
eval "`proccgi $*`"

# Generar lista ficheros crid
lista_CRIDS=""
for F_crid in ${!FORM_CRIDFILE*}; do
	# Obtener nombre de fichero
	TMP='$'${F_crid}
	eval "fileCRID=$TMP"
	# Agregar a lista de ficheros
	[ ${#lista_CRIDS} -eq 0 ] && lista_CRIDS="${fileCRID}" || lista_CRIDS="${lista_CRIDS} ${fileCRID}"
done

# Log del proceso
echo "<b>`date` Borrar grabación: crid=$lista_CRIDS</b>" >> $LOG
echo -n "" > $SCRIPT

# Recorrer lista de ficheros
resultado=1
for Cridfile in ${lista_CRIDS}; do
	# Comprobar fichero
	if [ -f $Cridfile ]; then
		# Procesar fichero crid
		eval `www-tools crid2var ${Cridfile}`
		echo "Fichero: `basename ${Cridfile}` -> $Titulo (fmpg=$num_fmpg)" >> $LOG

		# Borrar crid y fichero .refXML
		echo "rm -f $Cridfile" >> $SCRIPT
		echo "rm -f ${Cache}/`basename $Cridfile .crid`.refXML" >> $SCRIPT

		# Resultado OK
		resultado=0
	else
		# Resultado ERROR
		resultado=1
	fi

	# Comprobar errores
	[ $resultado -ne 0 ] && break
done

# Ejecutar acciones
if [ $resultado -eq 0 ]; then
	# Borrar ficheros
	cat <<- --EOF-- >> $LOG
	Script a ejecutar:
	---- Inicio ----
	`cat $SCRIPT`
	---- Fin ----
	--EOF--
	eval "(`cat $SCRIPT`) >> $LOG 2>> $LOG"

	# Resultado OK
	enviar_xml_ok
else
	# Resultado ERROR
	enviar_xml_err
fi

# Eliminar ficheros temporales
rm -f $SCRIPT
