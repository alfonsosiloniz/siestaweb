#!/bin/bash 
# Martin Ostermann, 2005-08-21
# Modificado por pepper para retornar XML 28/03/2007
# Modificado por phosy para devolver el espacio libre en disco, 06/05/2007
source ../www-setup
if [ $# != 0 ] ; then
	Recordings=$1
else
	Recordings=/$QUERY_STRING
fi
Title=$2

n=1
echo Content-type: text/xml
echo ""
echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>"
echo "<?xml-stylesheet type=\"text/xsl\" href=\"/sincro/$3\"?>"
echo "<M750>" 
video_dir=`sed -n -e "/DeviceRecordingFolder/ s/D.* *\(.pvr.*\)/\1/p" /var/etc/settings.txt` 
if [ -d $video_dir ]; then 
  disk_space=`df $video_dir |tail -1 | cut -b 42-50` 
  disk_spaceMb=$((disk_space/1024))
  disk_spaceGb=$((disk_spaceMb/1024))
  echo "<SPACE>$disk_spaceMb Mb ($disk_spaceGb Gb ~ $((disk_spaceGb/2)) horas)</SPACE>" 
fi 

DiaSemana=([1]="Lun" [2]="Mar" [3]="Mie" [4]="Jue" [5]="Vie" [6]="Sab" [7]="Dom")

echo "<${Title} now=\"`date +%s`\">"
if [ -d $Recordings ]; then
    for Cridfile in $Recordings/*.crid ; do
    	Cachefile=${Cache}/`basename $Cridfile .crid`.refXML
    	if [ $Cridfile -nt $Cachefile ] ; then
    		declare -a Crid0
    		#Crid0=( `hexdump -n 50 -e '11/4 "%d \n" 1/2 "%d \n" 1/4 "%d \n" ' $Cridfile ` )
    		Crid0=( `hexdump -n 50 -e '1/4 "%d \n" 1/4 "%X" "\n" 1/4 "%X" "\n" 8/4 "%d \n" 1/2 "%d \n" 1/4 "%d \n" ' $Cridfile ` )
            pidcid1=`printf "%08X" 0x${Crid0[1]}`
            pidcid2=`printf "%08X" 0x${Crid0[2]}`
            pidcid=${pidcid1}${pidcid2}
    		c1=${Crid0[12]}
    		Begin=${Crid0[4]}
    		End=${Crid0[5]}
    		serieId=${Crid0[10]}
    		echo -n "<RECORD><CRID_FILE>$Cridfile</CRID_FILE><TITLE>"` hexdump -v -s 50 -n $c1 -e "/1 \"&#%d;\"" $Cridfile | sed -e 's/^&#5;//'` "</TITLE>" >$Cachefile
    		ds=`awk "BEGIN {print strftime( \"%u\" , $Begin) }"`
            dateFormatIni=`awk "BEGIN {print strftime( \"%d.%m.%y %H:%M\" , $Begin) }"`
            dateFormatIni="$dateFormatIni, ${DiaSemana[ds]}"
            ds=`awk "BEGIN {print strftime( \"%u\" , $End) }"`
            dateFormatFin=`awk "BEGIN {print strftime( \"%d.%m.%y %H:%M\" , $End) }"`
            dateFormatFin="$dateFormatFin, ${DiaSemana[ds]}"
            awk "BEGIN {print \"<INIT_TIME>$dateFormatIni</INIT_TIME><END_TIME>$dateFormatFin</END_TIME><DURATION>\" ($End-$Begin)/60 \"</DURATION><UTC_TIME>$Begin</UTC_TIME><UTC_END_TIME>$End</UTC_END_TIME>\" }" >> $Cachefile
            echo "<SERIE_ID>$serieId</SERIE_ID><PIDCID>${pidcid}</PIDCID>" >> $Cachefile
            echo "</RECORD>" >> $Cachefile
    	fi
    	cat <$Cachefile
    	n=$((n+1))	
    done
fi
echo "</${Title}></M750>"
