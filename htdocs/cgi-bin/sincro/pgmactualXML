#!/bin/bash 
# by pepper 28/03/2007
# Retorna la sincroguia con el programa actual para todos los canales
# Parametros: ?N-M
# Donde N es el indice inicial del canal dentro de la lista total y M el final

# Ejecutamos el script con baja prioridad
renice 20 $$ > /dev/null

source ../www-setup
CACHE_FILE=${Cache}/pgmactualXML.cache

if [ -d $SERVER_ROOT/sincro/epg/ ]; then
    DIR_IMG_SINCRO_ACCESIBLE=si
else
    DIR_IMG_SINCRO_ACCESIBLE=no
fi

echo Content-type: text/xml
echo ""
echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>"
echo "<?xml-stylesheet type=\"text/xsl\" href=\"/sincro/sincro.xsl\"?>"
echo "<M740><SINCROGUIA actual=\"0\" miniatures=\"$MOSTRAR_MINI_IMG\" getImgInet=\"$OBTENER_IMG_INET\" localSincroImgAcc=\"$DIR_IMG_SINCRO_ACCESIBLE\">"

if [ -f ${CACHE_FILE} ]; then
    # Si el XML se esta generando hay que esperar a que finalice, para no mandarlo incompleto
    if [ -f ${CACHE_FILE}.generating ]; then
        i=0
        # Esperamos hasta que no exista el fichero con un maximo de 5 minutos
        while [ -f ${CACHE_FILE}.generating -a $i -lt 300 ]; do
            sleep 1
            i=$((i+1))
        done
    fi
    #echo Content-type: text/xml
    #echo ""
    cat < ${CACHE_FILE}
#else
#    from=1
#    to=1000
#    if [ -n "$QUERY_STRING" ]; then
#        from=`echo $QUERY_STRING | cut -d"-" -f 1`
#        to=`echo $QUERY_STRING | cut -d"-" -f 2`
#    fi
#    
#    i=1
#    for Sincrofile in $EPG_PATH/*.db ; do
#        if [ $i -ge $from -a $i -le $to ]; then
#            if [ -f $Sincrofile ]; then
#                . ./chactXML $Sincrofile
#            fi
#        fi
#        i=$((i+1))
#    done
fi

echo "</SINCROGUIA></M740>"
