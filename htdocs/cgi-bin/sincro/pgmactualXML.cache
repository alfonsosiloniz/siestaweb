#!/bin/bash 
# by pepper 03/04/2007
# Genera la sincroguia de un canal en XML y la guarda en el fichero de Caché

# Ejecutamos el script con baja prioridad
renice 20 $$ > /dev/null

# Configurar entorno
source ../www-setup
SORT_CHANNELS=$Cache/sort_channels.txt
CACHE_FILE=${Cache}/pgmactualXML.cache

# Comprobar marcas de generacion de cache XML y programa actual
[ -f ${Cache}/sincrochannelXML.cache.generating -o -f ${Cache}/pgmactual.cache.generating ] && exit -1

# Crear marca de generacion de programa actual
touch ${Cache}/pgmactual.cache.generating

# Log del proceso
echo "`date` Iniciando generacion de XML de Programa Actual [host: `hostname`]" > ${Cache}/pgmactual.cache.log

#echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>" > ${CACHE_FILE}
#echo "<?xml-stylesheet type=\"text/xsl\" href=\"/sincro/sincro.xsl\"?>" >> ${CACHE_FILE}
#echo "<M740><SINCROGUIA miniatures=\"$MOSTRAR_MINI_IMG\">" >> ${CACHE_FILE}

# Generamos el fichero sort_channels.txt con la misma ordenación del gigaset
[ ! -f $SORT_CHANNELS ] && ./sortChannels

if [ -f $SORT_CHANNELS ]; then
	ListaCanales=`cat $SORT_CHANNELS`
else
	ListaCanales=$EPG_PATH/*.db
fi

# Crear fichero temporal vacio
echo -n "" > ${CACHE_FILE}.temp

i=1
for Sincrofile in $ListaCanales ; do
	if [ -f $Sincrofile ]; then
		CHANNEL_ID=`echo $Sincrofile | cut -d"_" -f2 | cut -d"." -f1`
		CHANNEL_CACHE=${Cache}/sincrochannelXML.cache.$CHANNEL_ID
		# Si la caché de ese canal se está generando, lo saltamos
		if [ ! -f ${CHANNEL_CACHE}.generating ]; then
			# Si existe fichero de texto ordenado, generamos el XML a partir de ahí, sino, a partir del .db
			if [ -f ${CHANNEL_CACHE}.text ]; then
				. ./chactextXML $Sincrofile ${CHANNEL_CACHE}.text $i >> ${CACHE_FILE}.temp
			else
				. ./chactXML $Sincrofile $i >> ${CACHE_FILE}.temp
			fi
		fi
		i=$((i+1))
	fi
done

# Pasar de fichero temporal a fichero definitivo
touch ${CACHE_FILE}.generating
rm -f ${CACHE_FILE}
mv ${CACHE_FILE}.temp ${CACHE_FILE}
rm -f ${CACHE_FILE}.generating

#echo "</SINCROGUIA></M740>"  >> ${CACHE_FILE}
echo "`date` Finalizada generacion de XML de Programa Actual [host: `hostname`]" >> ${Cache}/pgmactual.cache.log

# Eliminar marca de generacion de programa actual
rm -f ${Cache}/pgmactual.cache.generating
