#!/bin/bash
# pepper, (c) Grupo SIESTA, 13-04-2007
#
# Genera fichero xml con el programa actual de 1 canal a partir de cache de texto
# $1 <- Fichero sincroguia (.db)
# $2 <- Fichero cache text
# $3 -> Fichero cache xml
#
# Este script es incluido desde otros, no debería invocarse directamente

# Obtener parametros
chID=`echo $1 | cut -d"_" -f2 | cut -d"." -f1`
CACHE_FILE_TEXT=$2
CACHE_FILE_XML=$3

# Configurar entorno
now=`date +%s`

# Comprobar fichero texto
if [ -f ${CACHE_FILE_TEXT} ]; then
	# Obtener datos canal
	mapping=`grep :${chID}: ${Cache}/info_channels.txt | head -1`
	cid=`echo "$mapping" | cut -d":" -f2`
	chName=`echo "$mapping" | cut -d":" -f4`
	numChannel=`echo "$mapping" | cut -d":" -f1`

	# Comienzo datos xml
	echo "<CHANNEL cid=\"$cid\" id=\"${chID}\" name=\"$chName\" file=\"$1\" numChannel=\"$numChannel\">" >> ${CACHE_FILE_XML}

	# Recorrer fichero .text
	found=0
	lineant=""
	while read line; do
		if [ ${#line} -gt 50 ]; then
			if [ $found -eq 0 ]; then
				dateIni=`echo $line | cut -d"_" -f1`
				if [ $dateIni -gt $now ]; then
					actual=1
					[ "Z$lineant" = "Z" ] && lineant=$line
					dateIni=`echo $lineant | cut -d"_" -f1`
					pid=`echo $lineant | cut -d"_" -f2`
					pidcid=`echo $lineant | cut -d"_" -f3`
					dateFormatIni=`echo $lineant | cut -d"_" -f4`
					dateFormatFin=`echo $line | cut -d"_" -f4`
					longs=`echo $lineant | cut -d"_" -f5`
					titulo=`echo $lineant | cut -d"_" -f6`
					subtitulo=`echo $lineant | cut -d"_" -f7`
					imagen=`echo $lineant | cut -d"_" -f8-`
				else
					actual=0
					lineant=$line
				fi

				# Si estamos en el programa actual, lo leemos y lo enviamos en XML
				if [ $actual -eq 1 ]; then
echo "	<PROGRAM id=\"${pid}\" pid=\"${pidcid}\" chid=\"${chID}\">
		<TITLE>$titulo</TITLE>
		<SUBTITLE>$subtitulo</SUBTITLE>
		<IMAGE>$imagen</IMAGE>
		<LONG>$longs</LONG>
		<DATE>$dateFormatIni</DATE>
		<DATE_FIN>$dateFormatFin</DATE_FIN>
		<DATE_UTC>$dateIni</DATE_UTC>
	</PROGRAM></CHANNEL>" >> ${CACHE_FILE_XML}

					# Terminamos proceso
					found=1
					return
				fi
			fi
		fi
	done < ${CACHE_FILE_TEXT}

	# Fin datos xml
	echo "</CHANNEL>" >> ${CACHE_FILE_XML}
else
	echo "<ERROR>Fichero ${CACHE_FILE_TEXT} no encontrado</ERROR>" >> ${CACHE_FILE_XML}
fi
