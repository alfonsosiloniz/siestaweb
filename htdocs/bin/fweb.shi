#!/bin/bash
# (c) Grupo SIESTA, 10-01-2008
#
# Definicion funciones web
#
# Este script es incluido desde otros, no debe invocarse directamente

#--------------------------------------------------
# Validacion login
# $1			Respuesta html/xml (html por defecto)
# $LOGIN_HTTP	Tipo de login (cookie/htpasswd/nologin)
# $LOGIN_COOKIE	Valor necesario cookie de validacion
# $HTTP_COOKIE	Cookie de validacion
#--------------------------------------------------
function validate_login() {
	local USER_COOKIE

	# Por defecto login NOK
	LoginValido="No"

	# Comprobar tipo de login
	case ${LOGIN_HTTP} in
		cookie)
			# Login por cookie, cookie=md5sum(usuario:contraseña)
			USER_COOKIE=`echo $HTTP_COOKIE | grep "M750_LOGIN" | cut -d"=" -f2`
			if [ "Z${LOGIN_COOKIE}" = "Z${USER_COOKIE}" ]; then
				# Login correcto
				LoginValido="Si"
			fi
			;;
		htpasswd)
			# Autentificacion por servidor web
			LoginValido="Si"
			;;
		nologin)
			# Login directo
			LoginValido="Si"
			;;
	esac

	# Login incorrecto, pagina de error y final script
	if [ "$LoginValido" = "No" ]; then
		# Tipo de respuesta
		if [ "Z$1" = "Zxml" ]; then
			# Resultado ERROR_LOGIN
			enviar_xml_err_login
		else
			# Enviar redireccion html
			http_header
			echo "<html>
<head>
	<script type=\"text/javascript\">
		document.location.href=\"/html/no-login.html\"
	</script>
</head>
</html>"
		fi

		# Final script
		exit
	fi
}

#--------------------------------------------------
# Cabecera documento http
#--------------------------------------------------
function http_header() {
	echo "Content-Type: text/html; charset=iso-8859-1"
	echo ""
}

#--------------------------------------------------
# Enviar comienzo documento html
# Incluye <head> y <title>
# $1 Titulo
# $2 Tiempo directiva Refresh
# $3 Flags ficheros JavaScript
#	a------ : ajax.js
#	-n----- : navigator.js
#	--c---- : cookies.js
#	---e--- : controlenviar.js
#	----f-- : fechasOp.js
#	-----b- : botones.js
#	------m : m750.js
# $4 Contenido JavaScript de la pagina
#--------------------------------------------------
function html_doc_start() {
	# Enviar cabecera http
	http_header
	# Documento html
	echo "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">
<html>
<head>
	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"/>
	<link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\"/>
	<link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\"/>
	<link rel=\"stylesheet\" href=\"/css/estilos.css\" type=\"text/css\" media=\"screen\"/>"

	# Enviar directiva Refresh
	[ "Z$2" != "Z" ] && echo "	<meta http-equiv=\"Refresh\" content=\"${2}\"/>"

	# Enviar ficheros JavaScript
	[ ${3/*a*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/ajax.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*n*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/navigator.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*c*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/cookies.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*e*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/controlenviar.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*f*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/fechasOp.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*b*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/botones.js\" charset=\"ISO-8859-1\"></script>"
	[ ${3/*m*/OK} = OK ] && echo "	<script type=\"text/javascript\" src=\"/js/m750.js\" charset=\"ISO-8859-1\"></script>"

	# Enviar JavaScript de la pagina
	[ "Z$4" != "Z" ] && echo "	<script type=\"text/javascript\" charset=\"ISO-8859-1\">${4}
	</script>"

	# Enviar titulo y final cabecera
	echo "	<title>${1}</title>
</head>"
}

#--------------------------------------------------
# Enviar top pagina html
# Incluye <boby>, <form> y <table>
# $1 Titulo
# $2 Funcion boby onload
# $3 Funcion form action
# $4 Form action (get/post)
#--------------------------------------------------
function html_top() {
	# Funcion body onload
	if [ "Z$2" = "Z" ]; then
		echo "<body bgcolor=\"#FFFFFF\">"
	else
		echo "<body bgcolor=\"#FFFFFF\" onload=\"${2}\">"
	fi
	# Funcion form action
	if [ "Z$3" = "Z" ]; then
		if [ "Z$4" = "Zpost" ]; then
			echo "<form name=\"form_m750\" method=\"post\">"
		else
			echo "<form name=\"form_m750\" method=\"get\">"
		fi
	else
		if [ "Z$4" = "Zpost" ]; then
			echo "<form name=\"form_m750\" method=\"post\" action=\"${3}\">"
		else
			echo "<form name=\"form_m750\" method=\"get\" action=\"${3}\">"
		fi
	fi
	# Tabla principal
	echo "	<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
		<tr>
			<td align=\"center\">
				<font class=\"titPag\">M750T EPG</font>
				<br>
				<font class=\"subTitPag\">${1}</font>
			</td>
		</tr>
		<tr>
			<td><br><script type=\"text/javascript\">barra_botones();</script></td>
		</tr>
	</table>
	<table width=\"98%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
		<tr>
			<td>"
}

#--------------------------------------------------
# Volcar archivo de log
# $1 Titulo
# $2 Fichero log
# $3 Script procesado log
#--------------------------------------------------
function print_log_file() {
	# Encabezado fila
	echo "<tr>"
	echo "	<td class=\"filaTitulo\" align=\"center\">$1</td>"
	echo "</tr>"
	echo "<tr>"

	# Comprobar fichero log
	if [ -e $2 ]; then
		echo -n "	<td class=\"filaNormal\" align=\"left\"><pre>"
		if [ "Z$3" = "Z" ] ; then
			echo -n "`cat $2`"
		else
			echo -n "`$3`"
		fi
		echo "</pre>"
	else
		echo "	<td class=\"filaNormal\" align=\"center\">"
		echo "	<br>Fichero $2 no encontrado<br>&nbsp;"
	fi

	# Final fila
	echo "	</td>"
	echo "</tr>"
}

#--------------------------------------------------
# Imprimir aviso
# $1 aviso
#--------------------------------------------------
function print_aviso_info() {
	# Aviso
	echo "			<br>
			<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" align=\"center\">
				<tr>
					<td class=\"txtAvisos\" align=\"center\">${1}</td>
				</tr>
			</table>"

	# Final pagina
	html_doc_end no
}

#--------------------------------------------------
# Enviar final documento html
# Incluye <table>, <form> y <body>
# $1 si -> Poner barra botones al final
#--------------------------------------------------
function html_doc_end() {
	# Cerrar celda tabla
	echo "			</td>
		</tr>
	</table>"
	# Enviar barra botones
	[ "Z$1" != "Zno" ] && echo "	<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"center\">
		<tr>
			<td><br><script type=\"text/javascript\">barra_botones();</script></td>
		</tr>
	</table>"

	# Final documento
	echo "	</form>
</body>
</html>"
}

#--------------------------------------------------
#--------------------------------------------------

#--------------------------------------------------
# Cabecera xml
#--------------------------------------------------
function xml_header() {
	echo "Content-Type: text/xml; charset=iso-8859-1"
	echo ""
}

#--------------------------------------------------
# Enviar cabecera documento xml
# $1 Plantilla xsl
#--------------------------------------------------
function xml_doc() {
	# Enviar cabecera xml
	xml_header
	# Enviar tipo documento xml
	echo "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>"
	# Enviar plantilla
	[ "Z$1" != "Z" ] && echo "<?xml-stylesheet type=\"text/xsl\" href=\"${1}\"?>"
}

#--------------------------------------------------
# Enviar respuesta xml OK
#--------------------------------------------------
function enviar_xml_ok() {
	# Enviar documento xml
	xml_doc
	# Resultado xml OK
	echo "<M750><RESULT>OK</RESULT></M750>"
}

#--------------------------------------------------
# Enviar respuesta xml ERROR
#--------------------------------------------------
function enviar_xml_err() {
	# Enviar documento xml
	xml_doc
	# Resultado xml ERROR
	echo "<M750><RESULT>ERROR</RESULT></M750>"
}

#--------------------------------------------------
# Enviar respuesta xml ERROR_LOGIN
#--------------------------------------------------
function enviar_xml_err_login() {
	# Enviar documento xml
	xml_doc
	# Resultado xml ERROR
	echo "<M750><RESULT>ERROR_LOGIN</RESULT></M750>"
}

#--------------------------------------------------
# Enviar respuesta xml FALLO
#--------------------------------------------------
function enviar_xml_fallo() {
	# Enviar documento xml
	xml_doc
	# Resultado xml FALLO
	echo "<M750><RESULT>FALLO</RESULT></M750>"
}

#--------------------------------------------------
#--------------------------------------------------

#--------------------------------------------------
# Obtener arquitectura maquina
#--------------------------------------------------
function get_maquina() {
	local ARQ
	# Obtener arquitectura
	ARQ=`uname -m`
	if [ "Z${ARQ}" = "Zmips" ]; then
		[ -L /usb1 ] && MAQUINA="M740" || MAQUINA="M750"
	else
		MAQUINA="PC"
	fi
}

#--------------------------------------------------
# Obtener estado gigaset
#--------------------------------------------------
function get_modo_video() {
	# Buscar nº de modulos que estan usando el modulo video
	M_V=(`lsmod | grep ^video`)
	[ ${M_V[2]} = 0 ] && ModoVideo="Apagado" || ModoVideo="Encendido"
}
function get_modo_grabacion() {
	# Buscar nº de modulos que estan grabando 
	M_G=(`lsmod | grep ^demux`)
	case ${M_G[2]} in
		1)					ModoGrabacion=1;;	# Apagado-Sin grabacion 
		4|5|6)				ModoGrabacion=2;;	# Apagado-Una grabacion 
		9)					ModoGrabacion=3;;	# Apagado-Dos grabaciones 
		7)					ModoGrabacion=4;;	# Encendido-Sin grabacion
		10|11|12|13|14|15)	ModoGrabacion=5;;	# Encendido-Una grabacion 
		16|17|18|19)		ModoGrabacion=6;;	# Encendido-Dos grabaciones
		*)					ModoGrabacion=0;;	# Desconocido
	esac
}

#--------------------------------------------------
# Obtener pid aleatoio
#--------------------------------------------------
function get_pid() {
	# Reservados 8 dígitos para pid Sincroguía (usados 7 dígitos)
	# new_pid 10 dígitos = '1' + 9 dígitos aleatorios
	new_pid="1`cat /dev/urandom | tr -dc 0-9 | head -c9`"
}

#--------------------------------------------------
